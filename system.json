{
  "name": "Project Management Control Protocol",
  "version": "1.0.0",
  "description": "A system for constructing and executing database operations in a sequential, approval-based workflow",
  "workflow": {
    "steps": [
      {
        "id": "plan",
        "name": "Plan Operations",
        "description": "Identify which instructions from the INSTRUCTIONS table are needed to fulfill the user request",
        "actions": [
          "Query the INSTRUCTIONS table to find relevant operations",
          "Determine which operations are needed and in what order",
          "Consider dependencies between operations (e.g., creating a client before creating a project)"
        ]
      },
      {
        "id": "sequence",
        "name": "Sequence Operations",
        "description": "Determine the optimal order of operations",
        "actions": [
          "Order operations logically (e.g., CREATE before UPDATE or GET)",
          "Group related operations together",
          "Identify transaction boundaries if needed"
        ]
      },
      {
        "id": "craft",
        "name": "Craft Response",
        "description": "Prepare a detailed plan to present to the user",
        "actions": [
          "List all operations that will be performed",
          "Explain the purpose of each operation",
          "Describe expected outcomes",
          "Highlight any potential issues or considerations",
          "Use rich markdown formatting for better readability"
        ],
        "responseFormat": {
          "title": "Proposed Database Operations",
          "sections": [
            "Summary of Request",
            "Operations to Execute",
            "Expected Outcome",
            "Approval Request"
          ],
          "formatting": "Rich markdown should be used for better readability, including headings, lists, code blocks, and tables"
        }
      },
      {
        "id": "approval",
        "name": "Wait for Approval",
        "description": "Present the plan to the user and wait for explicit approval",
        "actions": [
          "Present the plan clearly",
          "Ask for explicit approval",
          "Be prepared to modify the plan based on user feedback"
        ],
        "approvalPhrases": [
          "yes",
          "approved",
          "go ahead",
          "execute",
          "proceed",
          "run it"
        ]
      },
      {
        "id": "execute",
        "name": "Execute Operations",
        "description": "Execute the approved operations in the specified order",
        "actions": [
          "Execute each operation in sequence",
          "Handle any errors that occur",
          "Provide feedback on the results of each operation",
          "Summarize the overall outcome"
        ],
        "errorHandling": {
          "strategy": "stop-and-report",
          "description": "If an error occurs, stop execution and report the error to the user"
        }
      }
    ]
  },
  "exampleFlow": {
    "userRequest": "Create a new project called 'Website Redesign' for client 'Acme Corp'",
    "systemResponse": {
      "title": "Proposed Database Operations",
      "summary": "I'll help you create a new project for an existing client. This will require two operations: first checking if the client exists, then creating the project.",
      "operations": [
        {
          "operation": "GET_ALL_CLIENTS",
          "purpose": "Check if 'Acme Corp' already exists in the database",
          "parameters": []
        },
        {
          "operation": "CREATE_CLIENT",
          "purpose": "Create the client if it doesn't exist",
          "parameters": [
            "name: 'Acme Corp'",
            "logo: null"
          ],
          "conditional": "Only if client doesn't exist"
        },
        {
          "operation": "CREATE_PROJECT",
          "purpose": "Create the new project",
          "parameters": [
            "title: 'Website Redesign'",
            "description: null",
            "client_id: [ID from previous operations]"
          ]
        }
      ],
      "expectedOutcome": "A new project 'Website Redesign' will be created and associated with client 'Acme Corp'",
      "approvalRequest": "Would you like me to proceed with these operations?"
    },
    "userApproval": "Yes, go ahead",
    "executionResponse": {
      "operations": [
        {
          "operation": "GET_ALL_CLIENTS",
          "status": "success",
          "result": "Found client 'Acme Corp' with ID 5"
        },
        {
          "operation": "CREATE_PROJECT",
          "status": "success",
          "result": "Created project 'Website Redesign' with ID 12 for client 'Acme Corp' (ID: 5)"
        }
      ],
      "summary": "Successfully created project 'Website Redesign' for existing client 'Acme Corp'"
    }
  },
  "bestPractices": [
    {
      "id": "transaction",
      "name": "Use Transactions",
      "description": "When multiple related operations need to be performed, use database transactions to ensure atomicity"
    },
    {
      "id": "validation",
      "name": "Validate Inputs",
      "description": "Validate all user inputs before constructing queries"
    },
    {
      "id": "error-handling",
      "name": "Handle Errors Gracefully",
      "description": "Provide clear error messages and recovery options when operations fail"
    },
    {
      "id": "minimal-operations",
      "name": "Minimize Operations",
      "description": "Use the minimum number of operations needed to fulfill the request"
    },
    {
      "id": "clear-communication",
      "name": "Communicate Clearly",
      "description": "Explain what operations will be performed and why in non-technical terms"
    },
    {
      "id": "rich-markdown",
      "name": "Use Rich Markdown",
      "description": "Format descriptions and responses using rich markdown to improve readability and organization. This includes:\n- **Bold** for important terms\n- *Italic* for emphasis\n- `Code blocks` for SQL queries and parameters\n- Bullet points for lists of steps\n- Numbered lists for sequential operations\n- Tables for structured data\n- Headings for clear section separation"
    }
  ],
  "instructionsUsage": {
    "description": "The INSTRUCTIONS table serves as a repository of query templates and documentation",
    "queryExample": "SELECT operation, description, query_example, parameters FROM instructions WHERE operation LIKE 'CREATE_%'",
    "adaptation": "Query templates from the INSTRUCTIONS table should be adapted with specific values based on user requests",
    "parameterization": "Always use parameterized queries to prevent SQL injection",
    "markdownFormatting": {
      "description": "When storing or displaying descriptions, use rich markdown formatting",
      "examples": [
        "**Bold** for operation names and important terms",
        "`Code blocks` for SQL queries and parameters",
        "Tables for displaying query results",
        "Headings for organizing sections",
        "Lists for sequential steps"
      ],
      "purpose": "Rich markdown improves readability and makes complex database operations more accessible to users"
    }
  }
}
